# Generated by Django 5.0.2 on 2025-06-02 16:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('recruteur', 'Recruteur')], default='recruteur', max_length=20, verbose_name='Rôle')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('cv_file', models.FileField(upload_to='cvs/', verbose_name='CV')),
                ('skills', models.TextField(verbose_name='Compétences')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Candidat',
                'verbose_name_plural': 'Candidats',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=200, verbose_name='Diplôme')),
                ('institution', models.CharField(max_length=200, verbose_name='Établissement')),
                ('year', models.IntegerField(verbose_name='Année')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='core.candidate')),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200, verbose_name='Poste')),
                ('company', models.CharField(max_length=200, verbose_name='Entreprise')),
                ('duration', models.CharField(max_length=100, verbose_name='Durée')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='core.candidate')),
            ],
            options={
                'verbose_name': 'Expérience',
                'verbose_name_plural': 'Expériences',
            },
        ),
        migrations.CreateModel(
            name='JobOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('location', models.CharField(max_length=200, verbose_name='Localisation')),
                ('required_skills', models.TextField(verbose_name='Compétences requises')),
                ('experience_level', models.CharField(max_length=100, verbose_name="Niveau d'expérience")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_offers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Offre d'emploi",
                'verbose_name_plural': "Offres d'emploi",
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('in_progress', 'En cours'), ('accepted', 'Acceptée'), ('rejected', 'Refusée')], default='pending', max_length=20, verbose_name='Statut')),
                ('date_applied', models.DateTimeField(auto_now_add=True)),
                ('match_score', models.IntegerField(blank=True, null=True, verbose_name='Score de correspondance')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='core.candidate')),
                ('job_offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='core.joboffer')),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'unique_together': {('candidate', 'job_offer')},
            },
        ),
    ]
